// Sub-Project common Gradle File

apply plugin: 'java'

repositories {
   mavenCentral()
}

ext.springVersion='3.1.3.RELEASE'
ext.springSecurityVersion='3.1.2.RELEASE'
ext.hibernateVersion='4.1.7.Final'
ext.mysqlVersion='5.1.6'
ext.servletVersion='3.0.1'
ext.cglibVersion='2.2.2'
ext.javaassistVersion='3.12.1.GA'
ext.commonsdbcpVersion='1.4'

dependencies {
	runtime 'mysql:mysql-connector-java:5.1.29'
	compile "org.springframework:spring-orm:$springVersion"
	compile "org.springframework:spring-aop:$springVersion"
	compile "org.springframework:spring-webmvc:$springVersion"
	compile "org.springframework:spring-oxm:$springVersion"
	compile "org.springframework.security:spring-security-core:$springSecurityVersion"
	compile "org.springframework.security:spring-security-web:$springSecurityVersion"
	compile "org.springframework.security:spring-security-config:$springSecurityVersion"
	compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"
	compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
	compile "org.hibernate:hibernate-validator:4.2.0.Final"
	compile "org.hibernate:hibernate-core:$hibernateVersion"
	compile "mysql:mysql-connector-java:$mysqlVersion"
	compile "commons-dbcp:commons-dbcp:$commonsdbcpVersion"
	compile "javassist:javassist:$javaassistVersion"
	compile "org.springframework:spring-context:$springVersion"
	compile "org.springframework:spring-jdbc:$springVersion"
	compile "org.springframework:spring-tx:$springVersion"
	compile "cglib:cglib:$cglibVersion"
	
}

def mySqlCommandLine(sql) {
  "-u ${project.dbUser} -p${project.dbPass} -h ${project.dbHost} -P ${project.dbPort} -e".split().toList() + sql
}

def firstMember(hashSet) {
  return hashSet.iterator().next()
}

task dropDB(type: Exec) {
  executable = 'mysql'
  args = mySqlCommandLine("drop database if exists ${project.dbName};")
}

task createDB(type: Exec, dependsOn: dropDB) {
  executable = 'mysql'
  args = mySqlCommandLine("create database ${project.dbName};")
}

task loadDB(type: Exec, dependsOn: createDB) {
  executable = 'mysql'
  args = mySqlCommandLine("use ${project.dbName};")
}

task buildDB(type: Exec, dependsOn: loadDB) {
  executable = 'mysql'
  args = mySqlCommandLine("use ${project.dbName};\\. ${projectDir}/src/DB/web.sql")
}


/*
Create database 'neova'

Create tables as:

CREATE TABLE roles ( id int(6) NOT NULL AUTO_INCREMENT, role varchar(20) NOT NULL, PRIMARY KEY (id) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
CREATE TABLE users ( id int(6) NOT NULL AUTO_INCREMENT, login varchar(20) NOT NULL, password varchar(20) NOT NULL, PRIMARY KEY (id) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
CREATE TABLE user_roles ( user_id int(6) NOT NULL, role_id int(6) NOT NULL, KEY user (user_id), KEY role (role_id) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

Insert sample data as:

INSERT INTO neova.roles (role) VALUES ('admin'), ('moderator');
INSERT INTO neova.users (login, password) VALUES ('user', 'user'), ('admin', 'admin');
INSERT INTO neova.user_roles (user_id, role_id) VALUES (1, 2), (2, 1);
*/
